<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcis.ipr.train.register.mapper.CourseRegisterMapper" >
  <resultMap id="BaseResultMap" type="com.hcis.ipr.train.register.entity.CourseRegister" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="COURSE_ID" property="courseId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="TRAIN_ID" property="trainId" jdbcType="VARCHAR" />
    <result column="SCORE" property="score" jdbcType="DECIMAL" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATEDBY" property="updatedby" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="IS_DELETED" property="isDeleted" jdbcType="CHAR" />
    <result column="VERSION" property="version" jdbcType="DECIMAL" />
    <result column="RESULT" property="result" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="java.util.Map" id="scoreInfo" extends="BaseResultMap">
  	 <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
  	  <result column="COURSE_NAME" property="courseName" jdbcType="VARCHAR" />
  	  <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
  	  <result column="SHOW_FIELD" property="showField" jdbcType="VARCHAR" />
  	  <result column="TRAIN_NAME" property="trainName" jdbcType="VARCHAR" />
  	  <result column="RESULT" property="result" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, COURSE_ID, USER_ID, TRAIN_ID, SCORE, CREATOR, CREATE_TIME, UPDATEDBY, UPDATE_TIME, 
    IS_DELETED, VERSION,RESULT
  </sql>
  
  <select id="selectScoreInfo" resultMap="scoreInfo" parameterType="searchParam">
  	select t.id,t.train_id,t.course_id,t.user_id,ifnull(t.score,0) score ,uv.REAL_NAME,uv.DEPT_NAME,IC.COURSE_NAME,t.result 
  	from IPR_COURSE_REGISTER t
		join userview uv on  uv.ID=t.user_id 
		join ipr_course ic on ic.id=t.course_id
	where t.is_deleted='N' 
	<if test="paramMap.trainId != null and paramMap.trainId!=''" >
       and t.TRAIN_ID =  #{paramMap.trainId,jdbcType=VARCHAR}
     </if>
     <if test="paramMap.realName != null and paramMap.realName!=''" >
       and uv.real_name like '%${paramMap.realName}%'
     </if>
     <if test="paramMap.courseName != null and paramMap.courseName!=''" >
       and ic.COURSE_NAME like '%${paramMap.courseName}%'
     </if>
     <if test="paramMap.deptName != null and paramMap.deptName!=''" >
       and uv.dept_name like '%${paramMap.deptName}%'
     </if>
     <if test="paramMap.userId != null and paramMap.userId!=''" >
       and t.USER_ID =#{paramMap.userId,jdbcType=VARCHAR}
     </if>
     
	order by uv.REAL_NAME ,ic.course_name
  </select>
  
   <select id="listScoreInfo" resultMap="scoreInfo" parameterType="searchParam">
  	 select cr.id, cr.train_id, cr.course_id, cr.user_id, cr.show_field, uv.REAL_NAME, uv.DEPT_NAME ,
  	 (select t.train_name from ipr_train t where t.id=cr.TRAIN_ID ) train_name
  	 	from
<!-- 		(select max(t.id) ID,max(t.train_id) train_id,max(t.user_id) user_id,to_char(wm_concat(t.course_id)) course_id,date_format(wm_concat('('||ic.course_name||':'||nvl(t.score,0)||'分 '||',结果:'||(case t.result when '1' then '通过' when '0' then '未通过' else '无' end) ||')')) show_field   -->
	(SELECT MAX(t.id) ID,MAX(t.train_id) train_id,MAX(t.user_id)
		user_id,CAST(GROUP_CONCAT(t.course_id) AS CHAR) course_id,
		CAST(
		GROUP_CONCAT(
		CONCAT('(',ic.course_name,':',IFNULL(t.score,0),'分 ',',结果:',(CASE t.result WHEN '1' THEN '通过' WHEN '0' THEN '未通过' ELSE
		'无' END),')')
		)
		AS CHAR
		) show_field
		from IPR_COURSE_REGISTER t join ipr_course ic on ic.id = t.course_id
		 <if test="paramMap.courseName != null and paramMap.courseName!=''" >
	       and ic.COURSE_NAME like '%${paramMap.courseName}%'
	     </if>
			where t.is_deleted='N' group by T.TRAIN_ID,t.user_id) cr
	join userview uv on uv.ID=cr.user_id
	where 1=1 
		<if test="paramMap.trainId != null and paramMap.trainId!=''" >
	       and cr.TRAIN_ID =  #{paramMap.trainId,jdbcType=VARCHAR}
	     </if>
	     <if test="paramMap.realName != null and paramMap.realName!=''" >
	       and uv.real_name like '%${paramMap.realName}%'
	     </if>
	     <if test="paramMap.deptName != null and paramMap.deptName!=''" >
	       and uv.dept_name like '%${paramMap.deptName}%'
	     </if>
	      <if test="paramMap.studentId != null and paramMap.studentId !=''" >
	       and uv.ID =#{paramMap.studentId,jdbcType=VARCHAR}
	     </if>
	order by uv.REAL_NAME 
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from IPR_COURSE_REGISTER
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from IPR_COURSE_REGISTER
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hcis.ipr.train.register.entity.CourseRegister" >
    insert into IPR_COURSE_REGISTER (ID, COURSE_ID, USER_ID, 
      TRAIN_ID, SCORE, CREATOR, 
      CREATE_TIME, UPDATEDBY, UPDATE_TIME, 
      IS_DELETED, VERSION)
    values (#{id,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{trainId,jdbcType=VARCHAR}, #{score,jdbcType=DECIMAL}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updatedby,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=CHAR}, #{version,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.hcis.ipr.train.register.entity.CourseRegister" >
    insert into IPR_COURSE_REGISTER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="courseId != null" >
        COURSE_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="trainId != null" >
        TRAIN_ID,
      </if>
      <if test="score != null" >
        SCORE,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updatedby != null" >
        UPDATEDBY,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="isDeleted != null" >
        IS_DELETED,
      </if>
      <if test="version != null" >
        VERSION,
      </if>
      <if test="result != null" >
        RESULT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="trainId != null" >
        #{trainId,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null" >
        #{updatedby,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=CHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hcis.ipr.train.register.entity.CourseRegister" >
    update IPR_COURSE_REGISTER
    <set >
      <if test="courseId != null" >
        COURSE_ID = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="trainId != null" >
        TRAIN_ID = #{trainId,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        SCORE = #{score,jdbcType=DECIMAL},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null" >
        UPDATEDBY = #{updatedby,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        IS_DELETED = #{isDeleted,jdbcType=CHAR},
      </if>
      <if test="result != null" >
        RESULT=#{result,jdbcType=VARCHAR},
      </if>
      VERSION = VERSION+1,
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hcis.ipr.train.register.entity.CourseRegister" >
    update IPR_COURSE_REGISTER
    set COURSE_ID = #{courseId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      TRAIN_ID = #{trainId,jdbcType=VARCHAR},
      SCORE = #{score,jdbcType=DECIMAL},
      CREATOR = #{creator,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATEDBY = #{updatedby,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      IS_DELETED = #{isDeleted,jdbcType=CHAR},
      VERSION = VERSION+1,
      RESULT=#{result,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="batchDelete" parameterType="searchParam" >
    update IPR_COURSE_REGISTER
    <set >
      <if test="paramMap.updatedby != null" >
        UPDATEDBY = #{paramMap.updatedby,jdbcType=VARCHAR},
      </if>
      <if test="paramMap.updateTime != null" >
        UPDATE_TIME = #{paramMap.updateTime,jdbcType=TIMESTAMP},
      </if>
        IS_DELETED = 'Y',
        VERSION = VERSION+1,
    </set>
    where TRAIN_ID = #{paramMap.trainId,jdbcType=VARCHAR} and USER_ID in (${paramMap.ids})
  </update>
</mapper>